{"version":3,"sources":["components/table/ZudokuCell.js","components/table/ZudokuTable.js","App.js","reportWebVitals.js","index.js"],"names":["ZudokuCell","_ref","number","position","changeNumber","react_default","a","createElement","TableCell","align","TextField","id","label","variant","onChange","e","target","value","ZudokuTable","rows","react","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableBody","map","row","i","TableRow","key","&:last-child td, &:last-child th","border","j","table_ZudokuCell","concat","col","App","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isValid","board","k","m","Math","floor","n","sudokuSolver","data","setState","newNumber","state","solveSudoku","alert","refreshBoard","length","cell","inherits","createClass","_this2","className","table_ZudokuTable","Button","size","onClick","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.adc57f0e.chunk.js","sourcesContent":["import React from 'react'\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TextField from '@mui/material/TextField';\r\nimport '../assets/styles.css'\r\n\r\nconst ZudokuCell = ({ number, position, changeNumber }) => {\r\n  return (\r\n    <TableCell align=\"center\">\r\n        <TextField id=\"outlined-basic\" label={number} variant=\"outlined\" onChange={(e) => changeNumber(position, e.target.value)}/>\r\n    </TableCell>\r\n  )\r\n}\r\n\r\nexport default ZudokuCell","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport ZudokuCell from './ZudokuCell';\r\n\r\nconst ZudokuTable = ({ rows, changeNumber }) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row, i) => (\r\n            <TableRow\r\n              key={i}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              {row.map((number, j) => (\r\n                <ZudokuCell key={`${i}${j}`} number={number} position={{row: i, col: j}} changeNumber={changeNumber}/>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default ZudokuTable;","import React, { Component } from 'react'\nimport ZudokuTable from './components/table/ZudokuTable'\nimport Button from '@mui/material/Button';\nimport './App.css'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [\n        ['', '9', '', '', '4', '2', '1', '3', '6'],\n        ['', '', '', '9', '6', '', '4', '8', '5'],\n        ['', '', '', '5', '8', '1', '', '', ''],\n        ['', '', '4', '', '', '', '', '', ''],\n        ['5', '1', '7', '2', '', '', '9', '', ''],\n        ['6', '', '2', '', '', '', '3', '7', ''],\n        ['1', '', '', '8', '', '4', '', '2', ''],\n        ['7', '', '6', '', '', '', '8', '1', ''],\n        ['3', '', '', '', '9', '', '', '', '']\n      ]\n    }\n  }\n\n  isValid = (board, row, col, k) => {\n    for (let i = 0; i < 9; i++) {\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3)\n      const n = 3 * Math.floor(col / 3) + i % 3\n      if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\n        return false\n      }\n    }\n    return true\n  }\n  \n  \n  /**\n  *Note that the use of ` and a variable inside is to make that variable a strimg as provided by input array of arrays\n  */\n  sudokuSolver = (data) => {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (data[i][j] === '') {\n          for (let k = 1; k <= 9; k++) {\n            if (this.isValid(data, i, j, `${k}`)) {\n              data[i][j] = `${k}`\n              if (this.sudokuSolver(data)) {\n                return true\n              } else {\n                data[i][j] = ''\n              }\n            }\n          }\n          return false\n        } \n      }\n    }\n    this.setState({\n      board: data\n    })\n    return true\n  }\n\n  changeNumber = (position, newNumber) => {\n    let { board } = this.state\n    board[position.row][position.col] = newNumber;\n    this.setState({\n      board\n    })\n  }\n\n  solveSudoku = () => {\n    let sudokuSolved = this.sudokuSolver(this.state.board);\n    if(sudokuSolved){\n      alert('Congrats, your sudoku is solved');\n    }else{\n      alert('Oh ho, your sudoku has a problem that makes me unable to sove it');\n    }\n  }\n\n  refreshBoard = () => {\n    let { board } = this.state;\n    for (let row = 0; row < board.length; row++) {\n      for (let cell = 0; cell < board[row].length; cell++) {\n        board[row][cell] = '';\n      }\n    }\n    this.setState({\n      board\n    })\n  }\n\n  render() {\n    return (\n      <div className='width-90 center'>\n        <h1>\n          Sudoku Solver\n        </h1>\n        <div className='width-75 center'>\n          <ZudokuTable rows={this.state.board} changeNumber={this.changeNumber}/>\n          <div className='margin-y-5 flex-between'>\n            <Button variant=\"contained\" size=\"small\" onClick={() => this.refreshBoard()}>\n              Reset\n            </Button>\n            <Button variant=\"contained\" size=\"small\" onClick={() => this.solveSudoku()}>\n              Solve\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}